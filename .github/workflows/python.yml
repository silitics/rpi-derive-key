name: Python

on:
  push:
    branches:
      - main
      - ci
  pull_request:
  workflow_dispatch:

jobs:
  linux:
    runs-on: ubuntu-latest
    name: Build Linux Wheel
    strategy:
      matrix:
        target: [x86_64, aarch64, armv7]
    steps:
    - uses: actions/checkout@v3
    - uses: PyO3/maturin-action@v1
      with:
        command: build
        args: --release --sdist -o dist --find-interpreter
        target: ${{ matrix.target }}
        manylinux: auto
        working-directory: python
    - uses: actions/upload-artifact@v3
      with:
        name: wheels
        path: python/dist

  windows:
    runs-on: windows-latest
    name: Build Windows Wheel
    steps:
    - uses: actions/checkout@v3
    - uses: PyO3/maturin-action@v1
      with:
        command: build
        args: --release -o dist --find-interpreter
        working-directory: python
    - uses: actions/upload-artifact@v3
      with:
        name: wheels
        path: python/dist

  macos:
    runs-on: macos-latest
    name: Build MacOS Wheel
    steps:
    - uses: actions/checkout@v3
    - uses: PyO3/maturin-action@v1
      with:
        command: build
        args: --release -o dist --universal2 --find-interpreter
        working-directory: python
    - uses: actions/upload-artifact@v3
      with:
        name: wheels
        path: python/dist

  publish:
    name: Publish to PyPi
    runs-on: ubuntu-latest
    environment: PyPi
    if: github.event_name == 'create' && startsWith(github.ref, 'refs/tags/v')
    needs: [ macos, windows, linux ]
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: wheels
          path: dist
      - run: ls -l dist
      - name: Publish Wheels to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          skip_existing: true
          password: ${{ secrets.PYPI_API_TOKEN }}
